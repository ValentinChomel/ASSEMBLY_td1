#Author : Valentin Chomel

#  00   /* copy_block - Copy src to dest and return xor checksum of src */
#  03   result = 0;
#  04   while (len > 0) {
#  05       int val = *src++;
#  06       *dest++ = val;
#  07       result ^= val;
#  08       len--;
#  09   }

	irmovq $0, %rdi		#Store src in rdi
	mrmovq len, %rdx	#Store len in rdx
	xorq %rax,%rax          # result = 0;
	andq %rdx,%rdx          # len <= 0?
	jle Done                # if so, goto Done:
 
Loop:   mrmovq src(%rdi), %r10     # read val from src...
	rmmovq %r10, dest(%rdi)    # ...and store it to dest
	irmovq $8, %r10
	addq %r10, %rdi         # rdi++

	andq %rdx, %rdx         # len > 0?
	xorq %r10, %rax
	irmovq $1, %r10
	subq %r10, %rdx         # len--
	jg Loop                 # if so, goto Loop:

Done:
        halt


#.pos 1024
## Source block
#src:
#        .quad 0x00a
#        .quad 0x0b0
#        .quad 0xc00
#
## Destination block
#.pos 2048
#dest:
#        .quad 0x111
#        .quad 0x222
#        .quad 0x333
#
## Length
#len:
#        .quad 0x3

